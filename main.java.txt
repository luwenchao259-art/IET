package game;

import javax.swing.*;
import java.awt.*;
import java.awt.image.BufferStrategy;
import java.util.ArrayList;
import java.util.List;

public class Main extends Canvas implements Runnable {
    private JFrame frame;
    private boolean running = false;
    private List<Entity> enemies = new ArrayList<>();
    private Ship player;
    private int lives = 3, score = 0;

    public Main() {
        frame = new JFrame("Space Invaders");
        frame.setSize(512, 480);
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.add(this);
        frame.setVisible(true);
        initGame();
    }

    private void initGame() {
        player = new Ship(240, 420, null);
        for (int i = 0; i < 4; i++)
            for (int j = 0; j < 6; j++)
                enemies.add(new Enemy(60 + j*60, 60 + i*40, null));
    }

    public synchronized void start() {
        running = true;
        new Thread(this).start();
    }

    @Override
    public void run() {
        createBufferStrategy(2);
        BufferStrategy bs = getBufferStrategy();

        while (running) {
            Graphics2D g = (Graphics2D) bs.getDrawGraphics();
            DrawManager dm = new DrawManager(g, getWidth(), getHeight());
            dm.clearScreen();
            dm.drawHUD(lives, score);
            dm.drawEntity(player);
            dm.drawEntities(enemies);
            g.dispose();
            bs.show();

            try { Thread.sleep(33); } catch (InterruptedException ignored) {}
        }
    }

    public static void main(String[] args) {
        new Main().start();
    }
}